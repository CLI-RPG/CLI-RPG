version: '3.1'

services:

  mongo_auth:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME : barbie
      MONGO_INITDB_ROOT_PASSWORD : barbie
    volumes:
      - mongo-db-auth:/data/db
    networks:
      - auth_db_gui
      - auth_db
      - auth_db_grafana
    deploy:
      replicas : 1
      # placement:
      #   constraints:
      #     - "node.role==auth_db"



  mongo_express_auth:
    depends_on:
      - mongo_auth
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME : barbie
      ME_CONFIG_MONGODB_ADMINPASSWORD : barbie
      ME_CONFIG_MONGODB_URL : mongodb://barbie:barbie@mongo_auth:27017/
      ME_CONFIG_SITE_BASEURL : /auth_db/
    networks:
      - auth_db_gui
      - gateway_auth_db_gui
    deploy:
      replicas : 1

  auth_server:
    depends_on:
      - mongo_auth
    image: nethdr/cli-rpg-auth
    env_file:
      CLI-RPG-Authentication/secret.env
    environment:
      MONGO_AUTH_DATABASE : auth
      MONGO_AUTH_COLLECTION : client
      MONGO_INITDB_ROOT_USERNAME : barbie
      MONGO_INITDB_ROOT_PASSWORD : barbie
    networks:
      - auth_db
      - gateway_auth
    deploy:
      replicas : 1

  grafana:
    depends_on:
      - mongo_auth
    image: nethdr/cli-rpg-grafana
    volumes:
      - ./CLI-RPG-Logging/data:/var/lib/grafana
      - /var/lib/grafana/plugins
      - ./CLI-RPG-Logging/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./CLI-RPG-Logging/providers.yaml:/etc/grafana/provisioning/dashboards/providers.yaml
      - ./CLI-RPG-Logging/mongo_dashboard.json:/etc/grafana/provisioning/dashboards/mongo_dashboard.json
      - ./CLI-RPG-Logging/prometheus_dashboard.json:/etc/grafana/provisioning/dashboards/prometheus_dashboard.json
    environment:
      GF_SERVER_ROOT_URL : /grafana/
      GF_SERVER_SERVE_FROM_SUBPATH: "true"
      GF_SERVER_ENFORCE_DOMAIN: "false"
    networks:
      - gateway_grafana
      - auth_db_grafana
      - bl_db_grafana
    deploy:
      replicas : 1
      # placement:
      #   constraints:
      #     - "node.role==grafana"

  bl_service:
    image: nethdr/cli-rpg-bl:1.0.0
    networks:
      - gateway_bl
      - bl_io_adapter
    deploy:
      replicas : 1

  mongo_bl:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME : root
      MONGO_INITDB_ROOT_PASSWORD : example
    networks:
      - io_db
      - bl_db_grafana
      - bl_db_gui
    volumes:
      - mongo-db-bl:/data/db
    deploy:
      replicas : 1
      # placement:
      #   constraints:
      #     - "node.role==bl_db"

  mongo_express_bl:
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_URL : "mongodb://root:example@mongo_bl:27017/"
      ME_CONFIG_MONGODB_ADMINUSERNAME : root
      ME_CONFIG_MONGODB_ADMINPASSWORD : example
      ME_CONFIG_SITE_BASEURL : /db/
    networks:
      - gateway_bl_db_gui
      - bl_db_gui
    deploy:
      replicas : 1

  io_service:
    depends_on:
      - mongo_bl
    image: nethdr/cli-rpg-io
    environment:
      MONGO_BL_DATABASE : Business
      MONGO_SESSIONS_COLLECTION : Sessions
      MONGO_INITDB_ROOT_USERNAME : root
      MONGO_INITDB_ROOT_PASSWORD : example
    networks:
      - bl_io_adapter
      - io_db
    deploy:
      replicas : 1

  kong:
    image: kong:latest
    volumes:
      - ./kong:/usr/local/kong/declarative
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_ADMIN_GUI_PATH: /manager
      KONG_ADMIN_GUI_URL: http://localhost:8001/manager

    ports:
      - 8000:8000
      - 8001:8001
      - 8443:8443
    networks:
      - gateway_auth_db_gui
      - gateway_auth
      - gateway_grafana
      - gateway_bl
      - gateway_bl_db_gui
      - gateway_frontend
    deploy:
      replicas : 1
      placement:
        constraints:
          - "node.role==manager"

  frontend:
    image: nethdr/cli-rpg-frontend:1.0.1
    user: "node"
    environment:
      - NODE_ENV=production
      - PORT=8000
    networks:
      - gateway_frontend
    deploy:
      replicas: 1

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/config.yml:/etc/prometheus/prometheus.yml
    networks:
      - gateway_grafana


volumes:
  mongo-db-auth:
  mongo-db-bl:

networks:
  gateway_auth_db_gui:
  gateway_auth:
  gateway_grafana:
  gateway_bl:
  gateway_bl_db_gui:
  gateway_frontend:
  auth_db_gui:
  auth_db:
  auth_db_grafana:
  bl_db_grafana:
  bl_io_adapter:
  io_db:
  bl_db_gui:
